// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot Testing 1`] = `
Object {
  "Outputs": Object {
    "CheckInstanceIp": Object {
      "Description": "To find your Minecraft instance IP address, visit the following link. Click on the instance to find its Public IP address.",
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "AWS::Region",
            },
            ".console.aws.amazon.com/ec2/v2/home?region=",
            Object {
              "Ref": "AWS::Region",
            },
            "#Instances:tag:aws:autoscaling:groupName=",
            Object {
              "Ref": "ASG46ED3070",
            },
            ";sort=tag:Name",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "ASG46ED3070": Object {
      "Properties": Object {
        "DesiredCapacity": "1",
        "LaunchConfigurationName": Object {
          "Ref": "ASGLaunchConfigC00AF12B",
        },
        "MaxSize": "1",
        "MinSize": "1",
        "NewInstancesProtectedFromScaleIn": true,
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "MyTestStack/ASG",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VpcminecraftPublicSubnetSubnet1Subnet3D3DC628",
          },
          Object {
            "Ref": "VpcminecraftPublicSubnetSubnet2Subnet599B7F9A",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "ASGInstanceProfile0A2834D7": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ASGInstanceRoleE263A41B",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "ASGInstanceRoleDefaultPolicy7636D8BF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecs:DeregisterContainerInstance",
                "ecs:RegisterContainerInstance",
                "ecs:Submit*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ClusterEB0386A7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:Poll",
                "ecs:StartTelemetrySession",
              ],
              "Condition": Object {
                "ArnEquals": Object {
                  "ecs:cluster": Object {
                    "Fn::GetAtt": Array [
                      "ClusterEB0386A7",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecs:DiscoverPollEndpoint",
                "ecr:GetAuthorizationToken",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ASGInstanceRoleDefaultPolicy7636D8BF",
        "Roles": Array [
          Object {
            "Ref": "ASGInstanceRoleE263A41B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ASGInstanceRoleE263A41B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/ASG",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ASGInstanceSecurityGroup0525485D": Object {
      "Properties": Object {
        "GroupDescription": "MyTestStack/ASG/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:25565",
            "FromPort": 25565,
            "IpProtocol": "tcp",
            "ToPort": 25565,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/ASG",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ASGLaunchConfigC00AF12B": Object {
      "DependsOn": Array [
        "ASGInstanceRoleDefaultPolicy7636D8BF",
        "ASGInstanceRoleE263A41B",
      ],
      "Properties": Object {
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": Object {
          "Ref": "ASGInstanceProfile0A2834D7",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.medium",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "ASGInstanceSecurityGroup0525485D",
              "GroupId",
            ],
          },
        ],
        "SpotPrice": "0.015",
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
echo ECS_CLUSTER=",
                Object {
                  "Ref": "ClusterEB0386A7",
                },
                " >> /etc/ecs/ecs.config
sudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP
sudo service iptables save
echo ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config
yum check-update -y
yum upgrade -y
yum install -y amazon-efs-utils
yum install -y nfs-utils
file_system_id_1=",
                Object {
                  "Ref": "EfsFileSystem37910666",
                },
                "
efs_mount_point_1=/opt/minecraft
mkdir -p \\"\${efs_mount_point_1}\\"
test -f \\"/sbin/mount.efs\\" && echo \\"\${file_system_id_1}:/ \${efs_mount_point_1} efs defaults,_netdev\\" >> /etc/fstab || echo \\"\${file_system_id_1}.efs.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".amazonaws.com:/ \${efs_mount_point_1} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0\\" >> /etc/fstab
mount -a -t efs,nfs4 defaults",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "AsgCapacityProvider760D11D9": Object {
      "Properties": Object {
        "AutoScalingGroupProvider": Object {
          "AutoScalingGroupArn": Object {
            "Ref": "ASG46ED3070",
          },
          "ManagedScaling": Object {
            "Status": "ENABLED",
            "TargetCapacity": 100,
          },
          "ManagedTerminationProtection": "ENABLED",
        },
      },
      "Type": "AWS::ECS::CapacityProvider",
    },
    "Cluster3DA9CCBA": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          Object {
            "Ref": "AsgCapacityProvider760D11D9",
          },
        ],
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DefaultCapacityProviderStrategy": Array [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "EC2Service5392EF94": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 100,
          "MinimumHealthyPercent": 0,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "EC2",
        "SchedulingStrategy": "DAEMON",
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EfsFileSystem37910666": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "FileSystemTags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/EfsFileSystem",
          },
        ],
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Retain",
    },
    "EfsFileSystemEfsMountTarget1FB1E892A": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "EfsFileSystem37910666",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "EfsFileSystemEfsSecurityGroup68CC9E7F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet1Subnet3D3DC628",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EfsFileSystemEfsMountTarget26C9652B8": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "EfsFileSystem37910666",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "EfsFileSystemEfsSecurityGroup68CC9E7F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet2Subnet599B7F9A",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EfsFileSystemEfsSecurityGroup68CC9E7F": Object {
      "Properties": Object {
        "GroupDescription": "MyTestStack/EfsFileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/EfsFileSystem",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "EULA",
                "Value": "TRUE",
              },
            ],
            "Essential": true,
            "Image": "itzg/minecraft-server:latest",
            "MemoryReservation": 1024,
            "MountPoints": Array [
              Object {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "minecraft-volume",
              },
            ],
            "Name": "minecraft",
            "PortMappings": Array [
              Object {
                "ContainerPort": 25565,
                "HostPort": 25565,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Family": "MyTestStackTaskDef3775C888",
        "NetworkMode": "bridge",
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Host": Object {
              "SourcePath": "/opt/minecraft",
            },
            "Name": "minecraft-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcminecraftPublicSubnetSubnet1DefaultRoute77AC8638": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet1RouteTableCED2BD57",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcminecraftPublicSubnetSubnet1RouteTableAssociationCF038AB7": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet1RouteTableCED2BD57",
        },
        "SubnetId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet1Subnet3D3DC628",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcminecraftPublicSubnetSubnet1RouteTableCED2BD57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/minecraftPublicSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcminecraftPublicSubnetSubnet1Subnet3D3DC628": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "minecraftPublicSubnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/minecraftPublicSubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcminecraftPublicSubnetSubnet2DefaultRouteFECDA88A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet2RouteTable77D54D02",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcminecraftPublicSubnetSubnet2RouteTable77D54D02": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/minecraftPublicSubnetSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcminecraftPublicSubnetSubnet2RouteTableAssociationEFC5F4E6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet2RouteTable77D54D02",
        },
        "SubnetId": Object {
          "Ref": "VpcminecraftPublicSubnetSubnet2Subnet599B7F9A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcminecraftPublicSubnetSubnet2Subnet599B7F9A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "minecraftPublicSubnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/Vpc/minecraftPublicSubnetSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;
